---
name: third_party_checks

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:

jobs:
  sonarcloud:
    name: Build (sonarCloud)
    runs-on: ubuntu-latest
    env:
      SONAR_SCANNER_VERSION: 4.6.1.2450
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      # yamllint disable rule:line-length
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: 11

      - name: Install boost
        run: |
          sudo apt-get update
          sudo apt-get install libboost-all-dev

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL:
            https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH

      - name: Download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH

      - name: Install g++-11
        run: |
          sudo apt-get install g++-11

      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install gcovr
        shell: bash
        run: |
          python -m pip install --upgrade pip
          sudo pip install git+https://github.com/gcovr/gcovr.git

      - name: Run build-wrapper
        run: |
          mkdir build
          cmake -S . -B cpp/build -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_COMPILER=g++-11
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build cpp/build/ --config Debug

      - name: Generate coverage data xml report
        run: |
          cd scripts
          ./generate_raw_coverage_data_gxx.sh
          ./run_gcovr_sonarqube.sh
          ./run_gcovr_cobertura.sh

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          sonar-scanner
          --define sonar.host.url="${{ env.SONAR_SERVER_URL }}"
          --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
        # yamllint enable rule:line-length

      - name: Copy the coverage report to the root
        run: cp ./coverage_reports/cobertura_coverage_report.xml .

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          verbose: true
          files: cobertura_coverage_report.xml
...
